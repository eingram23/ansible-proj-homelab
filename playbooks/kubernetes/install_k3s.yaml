---
### VARS NEEDED: host_prefix, mariadb_srv
- name: Create database for k3s
  hosts: "{{ mariadb_srv }}"
  gather_facts: false
  become: false

  vars:
    # mariadb_srv:
    mariadb_user: "{{ host_prefix }}"
    mariadb_db: "{{ host_prefix }}"
    mariadb_user_pw: "{{ lookup('hashi_vault', 'secret=secret/data/ssh/eingram:ssh_password') }}"
    mariadb_user_priv: '{{ mariadb_db }}.*:ALL,GRANT'
    
  tasks:

    - name: Setup mariadb database for k3s 
      ansible.builtin.include_role:
        name: eingram23.database.mariadb
        tasks_from: create_new_db

    - name: Setup mariadb database user for k3s 
      ansible.builtin.include_role:
        name: eingram23.database.mariadb
        tasks_from: create_new_user

- name: Install k3s on master node
  hosts: "{{ host_prefix }}[1-3].local.lan"
  gather_facts: false
  become: true
  become_method: sudo
  serial: 1

  vars:
    # host_prefix: 
    k3s_token: "{{ host_prefix }}"

  tasks:

    - name: Create folder for storing definition files for ansible to execute
      ansible.builtin.file:
        path: /opt/kubernetes/defs
        state: directory
        owner: ansible
        group: ansible
        mode: '0755'

    - name: Install kubernetes python module
      ansible.builtin.pip:
        name: kubernetes

    - name: Disable firewall (RHEL/CentOS)
      ansible.builtin.systemd:
        name: firewalld
        state: stopped
        enabled: false

    - name: Check if already installed
      ansible.builtin.stat:
        path: /usr/local/bin/k3s
      register: k3s_installed

    - block:
        - name: Run k3s install script
          ansible.builtin.shell: >
            curl -sfL https://get.k3s.io | sh -s - server
            --token=k3s
            --datastore-endpoint="mysql://{{ host_prefix }}:{{ lookup('hashi_vault', 'secret=secret/data/ssh/eingram:ssh_password') }}@tcp({{ mariadb_srv }}:3306)/{{ host_prefix }}"
            --write-kubeconfig-mode 644
          when: not k3s_installed.stat.exists

        - name: Install k3s service
          ansible.builtin.systemd:
            name: k3s
            enabled: true
            state: started
      when: inventory_hostname != host_prefix + "3.local.lan"

    - block:
        - name: Run k3s install script
          ansible.builtin.shell: >
            curl -sfL https://get.k3s.io | K3S_URL=https://{{ host_prefix }}1.local.lan:6443
            K3S_TOKEN={{ k3s_token }} sh -
          when: not k3s_installed.stat.exists

        - name: Install k3s-agent service
          ansible.builtin.systemd:
            name: k3s-agent
            enabled: true
            state: started
      when: inventory_hostname == host_prefix + "3.local.lan"

- name: Setup longhorn disks
  hosts: localhost
  gather_facts: true
  become: false

  tasks:

    - ansible.builtin.include_role:
        name: eingram23.vsphere.common
        tasks_from: add_vmdk
      loop:
        - "{{ host_prefix }}1"
        - "{{ host_prefix }}2"
        - "{{ host_prefix }}3"
      loop_control:
        loop_var: host_prefix_item
      vars:
        vm_name: "{{ host_prefix_item }}"
        vmdk_size: "20"
        datastore: "XN_iSCSI_SSD2"

      