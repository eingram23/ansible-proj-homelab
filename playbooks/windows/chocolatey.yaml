- name: Chocolatey Tasks
  hosts: "{{ hostvar | default([]) }}"
  become: false
  gather_facts: false

  vars:
    reboot: "no"
    force_install: "no"

  tasks:

    - name: Wake PC if in sleep mode
      ansible.builtin.include_role:
        name: eingram23.homelab.wol

    # - name: Obtain information about a registry key using short form
    #   ansible.windows.win_reg_stat:
    #     path: HKLM:\SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full\Release
    #   register: dotnet48_version

    - name: ensure .NET Framework 4.8 requirement is satisfied for Chocolatey CLI v2.0.0+
      # when: dotnet48_version not exists or dotnet48_version < "528040"
      when: '"dotnet48_prereq" in package'
      block:
        - name: install Chocolatey CLI v1.4.0
          win_chocolatey:
            name: 'chocolatey'
            state: present
            version: '1.4.0'

        - name: install Microsoft .NET Framework 4.8
          win_chocolatey:
            name: 'netfx-4.8'
            state: present

        - name: Reboot the host to complete .NET Framework 4.8 install
          when: reboot == "yes"
          ansible.windows.win_reboot:

        - name: install Chocolatey CLI v2.0.0+ when .NET Framework 4.8 dependency is met
          win_chocolatey:
            name: 'chocolatey'
            state: latest

    - name: Ensure Chocolatey itself is installed, using community repo for the bootstrap
      chocolatey.chocolatey.win_chocolatey:
        name: chocolatey

    - name: Install/Upgrade Choco Package(s)
      chocolatey.chocolatey.win_chocolatey:
        name: "{{ item }}"
        state: latest
      when: action == "install" and force_install == "no"
      loop: "{{ package }}"

    - name: Install/Upgrade Choco Package(s) (FORCE)
      chocolatey.chocolatey.win_chocolatey:
        name: "{{ item }}"
        state: latest
        force: true
      when: action == "install" and force_install == "yes"
      loop: "{{ package }}"

    - name: Remove Choco Package(s)
      chocolatey.chocolatey.win_chocolatey:
        name: "{{ item }}"
        state: absent
      when: action == "uninstall"
      loop: "{{ package }}"

    - name: Gather facts from chocolatey
      chocolatey.chocolatey.win_chocolatey_facts:

    - name: Displays the Outdated packages
      ansible.builtin.debug:
        msg: "{{ item.package }}"
      loop: "{{ ansible_chocolatey.outdated }}"

    - name: Install/Upgrade all outdated Choco Package
      chocolatey.chocolatey.win_chocolatey:
        name: "{{ item.package }}"
        state: latest
      loop: "{{ ansible_chocolatey.outdated }}"
      when: action == "upgrade_all" and force_install == "no"

    - name: Install/Upgrade all outdated Choco Package (FORCE)
      chocolatey.chocolatey.win_chocolatey:
        name: "{{ item.package }}"
        state: latest
        force: true
      loop: "{{ ansible_chocolatey.outdated }}"
      when: action == "upgrade_all" and force_install == "yes"

    - name: Displays the Packages
      ansible.builtin.debug:
        var: ansible_chocolatey.packages

    - name: Reboot host
      ansible.windows.win_reboot:
      when: reboot == "yes"